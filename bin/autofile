#!/usr/bin/perl

use Getopt::Std;
%opt = (t => undef, n => 0, v => 0, d => 'd');
getopts('d:nt:v', \%opt) or usage();
my $seq = shift || "them";

# -n   say what would be done, but don't do it
# -v   verbose mode
# -d   name default folder (default: +d)
# -t   any filings into folders other than the default go to -t instead.

@todo = (["subj", "this"],  # files in +d by default

	 # non-default folder
         ["subj", "library notification", "misc/library"],

	 # AND conditions
	 ["from", 'paypal@e.paypal.com', "to", 'mjd-corp-paypal.com@plover.com' ],

	 ['to', 'example-staples@plover.com', 'misc/commerce' ],
    );

for my $task (@todo) {
  my @fv;
  my @task = @$task;
  while (@task > 1) {
    push @fv, [ splice @task, 0, 2 ];
  }

  my $target_folder;
  if (@task) {
      $target_folder = $opt{t} // $task[0]; # -t overrides explicit target
  } else {
      $target_folder = $opt{d};	# default folder
  }
  for my $fv (@fv) { shell_escape($fv->[1]) }
  my @args = map "-$_->[0] '$_->[1]'", @fv;
  my $args = join " -and ", @args;
  my $res = qx{pick $args 2> /dev/null};
  $res =~ s/\s+/ /g;
  print STDERR "## pick $args ==> $res\n" if $opt{v};
  unless ($res =~ /^0/) {
      run_command("pick -sequence $seq $res > /dev/null 2>&1 ");
      my $scan = qq{scan $seq};
      my $action = qq{refile $seq +$folder};
      my $command = $opt{n} ? $scan : "$scan && $action";
      run_command($command, "$args => +$folder");
  }
}

run_command("folder");

sub run_command {
  my ($command, $annotation) = @_;
  print STDERR "$annotation\n" if $annotation;
  system($command);
}

sub shell_escape {
  for (@_) {
    s/'/'"'"'/g;
  }
}
